(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_core_v1_iscsi_persistent_volume_source.t : ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
 *)

[@@@warning "-32-34"]
open (struct
    include Ppx_yojson_conv_lib.Yojson_conv.Primitives
    type any = Yojson.Safe.t
    let any_of_yojson = Fun.id
    let yojson_of_any = Fun.id
    let pp_any = Yojson.Safe.pp
    let show_any = Yojson.Safe.show
    let string_of_yojson = function
      | `String s -> s
      | `Int i -> string_of_int i
      | _ -> failwith "string_of_yojson: string or int needed"
end)
type t = {
    (* chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication *)
    chap_auth_discovery: bool option [@yojson.default None] [@yojson.key "chapAuthDiscovery"];
    (* chapAuthSession defines whether support iSCSI Session CHAP authentication *)
    chap_auth_session: bool option [@yojson.default None] [@yojson.key "chapAuthSession"];
    (* fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \''ext4\'', \''xfs\'', \''ntfs\''. Implicitly inferred to be \''ext4\'' if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi *)
    fs_type: string option [@yojson.default None] [@yojson.key "fsType"];
    (* initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection. *)
    initiator_name: string option [@yojson.default None] [@yojson.key "initiatorName"];
    (* iqn is Target iSCSI Qualified Name. *)
    iqn: string [@yojson.key "iqn"];
    (* iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp). *)
    iscsi_interface: string option [@yojson.default None] [@yojson.key "iscsiInterface"];
    (* lun is iSCSI Target Lun number. *)
    lun: int32 [@yojson.key "lun"];
    (* portals is the iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). *)
    portals: string list [@default []] [@yojson.key "portals"];
    (* readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. *)
    read_only: bool option [@yojson.default None] [@yojson.key "readOnly"];
    secret_ref: Io_k8s_api_core_v1_secret_reference.t option [@yojson.default None] [@yojson.key "secretRef"];
    (* targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260). *)
    target_portal: string [@yojson.key "targetPortal"];
} [@@deriving yojson, show, make] [@@yojson.allow_extra_fields];;
let to_yojson = yojson_of_t
let of_yojson x =
  try
    Ok (t_of_yojson x)
  with
  | Ppx_yojson_conv_lib.Yojson_conv.Of_yojson_error (e, j) ->
      Error (Printf.sprintf "%s: %s" (Printexc.to_string e) (Yojson.Safe.to_string j))


