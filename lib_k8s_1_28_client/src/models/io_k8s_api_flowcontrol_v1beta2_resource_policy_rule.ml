(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_flowcontrol_v1beta2_resource_policy_rule.t : ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==\''\''`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.
 *)

[@@@warning "-32-34"]
open (struct
    include Ppx_yojson_conv_lib.Yojson_conv.Primitives
    type any = Yojson.Safe.t
    let any_of_yojson = Fun.id
    let yojson_of_any = Fun.id
    let pp_any = Yojson.Safe.pp
    let show_any = Yojson.Safe.show
end)
type t = {
    (* `apiGroups` is a list of matching API groups and may not be empty. \''*\'' matches all API groups and, if present, must be the only entry. Required. *)
    api_groups: string list [@default []] [@yojson.key "apiGroups"];
    (* `clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the `namespaces` field must contain a non-empty list. *)
    cluster_scope: bool option [@yojson.default None] [@yojson.key "clusterScope"];
    (* `namespaces` is a list of target namespaces that restricts matches.  A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \''*\''.  Note that \''*\'' matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true. *)
    namespaces: string list [@default []] [@yojson.key "namespaces"];
    (* `resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ \''services\'', \''nodes/status\'' ].  This list may not be empty. \''*\'' matches all resources and, if present, must be the only entry. Required. *)
    resources: string list [@default []] [@yojson.key "resources"];
    (* `verbs` is a list of matching verbs and may not be empty. \''*\'' matches all verbs and, if present, must be the only entry. Required. *)
    verbs: string list [@default []] [@yojson.key "verbs"];
} [@@deriving yojson, show, make] [@@yojson.allow_extra_fields];;
let to_yojson = yojson_of_t
let of_yojson x =
  try
    Ok (t_of_yojson x)
  with
  | Ppx_yojson_conv_lib.Yojson_conv.Of_yojson_error (e, j) ->
      Error (Printf.sprintf "%s: %s" (Printexc.to_string e) (Yojson.Safe.to_string j))


