(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_authorization_v1_subject_access_review_status.t : SubjectAccessReviewStatus
 *)

open Ppx_yojson_conv_lib.Yojson_conv.Primitives
type t = {
    (* Allowed is required. True if the action would be allowed, false otherwise. *)
    allowed: bool [@yojson.key "allowed"];
    (* Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true. *)
    denied: bool option [@yojson.default None] [@yojson.key "denied"];
    (* EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request. *)
    evaluation_error: string option [@yojson.default None] [@yojson.key "evaluationError"];
    (* Reason is optional.  It indicates why a request was allowed or denied. *)
    reason: string option [@yojson.default None] [@yojson.key "reason"];
} [@@deriving yojson, show, make] [@@yojson.allow_extra_fields];;
let to_yojson = yojson_of_t
let of_yojson = t_of_yojson


