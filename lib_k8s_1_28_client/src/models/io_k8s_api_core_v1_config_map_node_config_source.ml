(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_core_v1_config_map_node_config_source.t : ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node. This API is deprecated since 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration
 *)

type t = {
    (* KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases. *)
    kubelet_config_key: string;
    (* Name is the metadata.name of the referenced ConfigMap. This field is required in all cases. *)
    name: string;
    (* Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases. *)
    namespace: string;
    (* ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status. *)
    resource_version: string option [@default None];
    (* UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status. *)
    uid: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node. This API is deprecated since 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration *)
let create (kubelet_config_key : string) (name : string) (namespace : string) : t = {
    kubelet_config_key = kubelet_config_key;
    name = name;
    namespace = namespace;
    resource_version = None;
    uid = None;
}

