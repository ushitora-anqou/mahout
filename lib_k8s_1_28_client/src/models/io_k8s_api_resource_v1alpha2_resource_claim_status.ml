(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_resource_v1alpha2_resource_claim_status.t : ResourceClaimStatus tracks whether the resource has been allocated and what the resulting attributes are.
 *)

type t = {
    allocation: Io_k8s_api_resource_v1alpha2_allocation_result.t option [@default None] [@key "allocation"];
    (* DeallocationRequested indicates that a ResourceClaim is to be deallocated.  The driver then must deallocate this claim and reset the field together with clearing the Allocation field.  While DeallocationRequested is set, no new consumers may be added to ReservedFor. *)
    deallocation_requested: bool option [@default None] [@key "deallocationRequested"];
    (* DriverName is a copy of the driver name from the ResourceClass at the time when allocation started. *)
    driver_name: string option [@default None] [@key "driverName"];
    (* ReservedFor indicates which entities are currently allowed to use the claim. A Pod which references a ResourceClaim which is not reserved for that Pod will not be started.  There can be at most 32 such reservations. This may get increased in the future, but not reduced. *)
    reserved_for: Io_k8s_api_resource_v1alpha2_resource_claim_consumer_reference.t list [@default []] [@key "reservedFor"];
} [@@deriving yojson { strict = false }, show ];;

(** ResourceClaimStatus tracks whether the resource has been allocated and what the resulting attributes are. *)
let create () : t = {
    allocation = None;
    deallocation_requested = None;
    driver_name = None;
    reserved_for = [];
}

