(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_authorization_v1_subject_access_review_spec.t : SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
 *)

[@@@warning "-32-34"]
open (struct
    include Ppx_yojson_conv_lib.Yojson_conv.Primitives
    type any = Yojson.Safe.t
    let any_of_yojson = Fun.id
    let yojson_of_any = Fun.id
    let pp_any = Yojson.Safe.pp
    let show_any = Yojson.Safe.show
    let string_of_yojson = function
      | `String s -> s
      | `Int i -> string_of_int i
      | _ -> failwith "string_of_yojson: string or int needed"
end)
type t = {
    (* Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here. *)
    extra: any [@default (`Assoc [])] [@yojson.key "extra"];
    (* Groups is the groups you're testing for. *)
    groups: string list [@default []] [@yojson.key "groups"];
    non_resource_attributes: Io_k8s_api_authorization_v1_non_resource_attributes.t option [@yojson.default None] [@yojson.key "nonResourceAttributes"];
    resource_attributes: Io_k8s_api_authorization_v1_resource_attributes.t option [@yojson.default None] [@yojson.key "resourceAttributes"];
    (* UID information about the requesting user. *)
    uid: string option [@yojson.default None] [@yojson.key "uid"];
    (* User is the user you're testing for. If you specify \''User\'' but not \''Groups\'', then is it interpreted as \''What if User were not a member of any groups *)
    user: string option [@yojson.default None] [@yojson.key "user"];
} [@@deriving yojson, show, make] [@@yojson.allow_extra_fields];;
let to_yojson = yojson_of_t
let of_yojson x =
  try
    Ok (t_of_yojson x)
  with
  | Ppx_yojson_conv_lib.Yojson_conv.Of_yojson_error (e, j) ->
      Error (Printf.sprintf "%s: %s" (Printexc.to_string e) (Yojson.Safe.to_string j))


