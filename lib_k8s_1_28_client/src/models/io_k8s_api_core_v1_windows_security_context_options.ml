(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_core_v1_windows_security_context_options.t : WindowsSecurityContextOptions contain Windows-specific options and credentials.
 *)

type t = {
    (* GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. *)
    gmsa_credential_spec: string option [@default None] [@key "gmsaCredentialSpec"];
    (* GMSACredentialSpecName is the name of the GMSA credential spec to use. *)
    gmsa_credential_spec_name: string option [@default None] [@key "gmsaCredentialSpecName"];
    (* HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true. *)
    host_process: bool option [@default None] [@key "hostProcess"];
    (* The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. *)
    run_as_user_name: string option [@default None] [@key "runAsUserName"];
} [@@deriving yojson { strict = false }, show ];;

(** WindowsSecurityContextOptions contain Windows-specific options and credentials. *)
let create () : t = {
    gmsa_credential_spec = None;
    gmsa_credential_spec_name = None;
    host_process = None;
    run_as_user_name = None;
}

