(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_coordination_v1_lease_spec.t : LeaseSpec is a specification of a Lease.
 *)

[@@@warning "-32-34"]
open (struct
    include Ppx_yojson_conv_lib.Yojson_conv.Primitives
    type any = Yojson.Safe.t
    let any_of_yojson = Fun.id
    let yojson_of_any = Fun.id
    let pp_any = Yojson.Safe.pp
    let show_any = Yojson.Safe.show
    let string_of_yojson = function
      | `String s -> s
      | `Int i -> string_of_int i
      | _ -> failwith "string_of_yojson: string or int needed"
end)
type t = {
    (* MicroTime is version of Time with microsecond level precision. *)
    acquire_time: string option [@yojson.default None] [@yojson.key "acquireTime"];
    (* holderIdentity contains the identity of the holder of a current lease. *)
    holder_identity: string option [@yojson.default None] [@yojson.key "holderIdentity"];
    (* leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed renewTime. *)
    lease_duration_seconds: int32 option [@yojson.default None] [@yojson.key "leaseDurationSeconds"];
    (* leaseTransitions is the number of transitions of a lease between holders. *)
    lease_transitions: int32 option [@yojson.default None] [@yojson.key "leaseTransitions"];
    (* MicroTime is version of Time with microsecond level precision. *)
    renew_time: string option [@yojson.default None] [@yojson.key "renewTime"];
} [@@deriving yojson, show, make] [@@yojson.allow_extra_fields];;
let to_yojson = yojson_of_t
let of_yojson x =
  try
    Ok (t_of_yojson x)
  with
  | Ppx_yojson_conv_lib.Yojson_conv.Of_yojson_error (e, j) ->
      Error (Printf.sprintf "%s: %s" (Printexc.to_string e) (Yojson.Safe.to_string j))


