(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_core_v1_se_linux_options.t : SELinuxOptions are the labels to be applied to the container
 *)

[@@@warning "-32-34"]
open (struct
    include Ppx_yojson_conv_lib.Yojson_conv.Primitives
    type any = Yojson.Safe.t
    let any_of_yojson = Fun.id
    let yojson_of_any = Fun.id
    let pp_any = Yojson.Safe.pp
    let show_any = Yojson.Safe.show
end)
type t = {
    (* Level is SELinux level label that applies to the container. *)
    level: string option [@yojson.default None] [@yojson.key "level"];
    (* Role is a SELinux role label that applies to the container. *)
    role: string option [@yojson.default None] [@yojson.key "role"];
    (* Type is a SELinux type label that applies to the container. *)
    _type: string option [@yojson.default None] [@yojson.key "type"];
    (* User is a SELinux user label that applies to the container. *)
    user: string option [@yojson.default None] [@yojson.key "user"];
} [@@deriving yojson, show, make] [@@yojson.allow_extra_fields];;
let to_yojson = yojson_of_t
let of_yojson x =
  try
    Ok (t_of_yojson x)
  with
  | Ppx_yojson_conv_lib.Yojson_conv.Of_yojson_error (e, j) ->
      Error (Printf.sprintf "%s: %s" (Printexc.to_string e) (Yojson.Safe.to_string j))


