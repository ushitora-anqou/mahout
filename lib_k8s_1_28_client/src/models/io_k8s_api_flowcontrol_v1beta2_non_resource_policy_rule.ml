(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Io_k8s_api_flowcontrol_v1beta2_non_resource_policy_rule.t : NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.
 *)

[@@@warning "-32-34"]
open (struct
    include Ppx_yojson_conv_lib.Yojson_conv.Primitives
    type any = Yojson.Safe.t
    let any_of_yojson = Fun.id
    let yojson_of_any = Fun.id
    let pp_any = Yojson.Safe.pp
    let show_any = Yojson.Safe.show
    let string_of_yojson = function
      | `String s -> s
      | `Int i -> string_of_int i
      | _ -> failwith "string_of_yojson: string or int needed"
end)
type t = {
    (* `nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:   - \''/healthz\'' is legal   - \''/hea*\'' is illegal   - \''/hea\'' is legal but matches nothing   - \''/hea/*\'' also matches nothing   - \''/healthz/*\'' matches all per-component health checks. \''*\'' matches all non-resource urls. if it is present, it must be the only entry. Required. *)
    non_resource_urls: string list [@default []] [@yojson.key "nonResourceURLs"];
    (* `verbs` is a list of matching verbs and may not be empty. \''*\'' matches all verbs. If it is present, it must be the only entry. Required. *)
    verbs: string list [@default []] [@yojson.key "verbs"];
} [@@deriving yojson, show, make] [@@yojson.allow_extra_fields];;
let to_yojson = yojson_of_t
let of_yojson x =
  try
    Ok (t_of_yojson x)
  with
  | Ppx_yojson_conv_lib.Yojson_conv.Of_yojson_error (e, j) ->
      Error (Printf.sprintf "%s: %s" (Printexc.to_string e) (Yojson.Safe.to_string j))


